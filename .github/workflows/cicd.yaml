---
name: CICD

on:
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main
  workflow_dispatch:

jobs:
  cicd:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        poetry-version: ["1.1"]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    services:
      dev-nats:
        image: alwitt/nats-js:2.8.2-alpine
        ports:
          - 4222:4222
        options: --hostname dev-nats
      httpmq-mgmt:
        image: alwitt/cicd-support:httpmq-go.cicd.httpmq-0.4.1-rc.5-management
        ports:
          - 3000:3000
        env:
          LOG_LEVEL: info
          CONFIG_FILE: /httpmq.yaml
      httpmq-data:
        image: alwitt/cicd-support:httpmq-go.cicd.httpmq-0.4.1-rc.5-dataplane
        ports:
          - 3001:3000
        env:
          LOG_LEVEL: info
          CONFIG_FILE: /httpmq.yaml

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: abatilo/actions-poetry@v2.1.5
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Install dependencies
        run: poetry install --no-root

      - name: Build module
        run: poetry build

      - name: Check coding style
        run: poetry run black httpmq test scripts examples

      - name: Lint code
        run: poetry run pylint httpmq test scripts examples --min-similarity-lines=30 --ignore-paths=httpmq/models,httpmq/typing_utils.py,httpmq/util.py

      - name: Unit-test
        run: poetry run pytest --verbose --junitxml=test-reports/test.xml test/
        env:
          HTTPMQ_MGMT_API_URL: http://127.0.0.1:3000
          HTTPMQ_DATA_API_URL: http://127.0.0.1:3001
